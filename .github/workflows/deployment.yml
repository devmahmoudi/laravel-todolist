on:
  push:
    # branches:
      # - master

  workflow_dispatch:

env:
  WWWGROUP: 1000 # define host group ID once, use everywhere

jobs:
  Build-Image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: docker/8.4/Dockerfile
          push: true
          tags: devmahmoudi/laravel-todolist:latest
          build-args: |
            WWWGROUP=${{ env.WWWGROUP }}

  Deploy:
    runs-on: production
    needs: Build-Image
    env:
      WWWGROUP: '1000'
      BACKUP_PASSWORD: ${{ secrets.BACKUP_PASSWORD }}
    steps:
      - uses: actions/checkout@v5

      - name: Create .env file
        run: |
          cp .env.example .env
          sed -i "s|^APP_KEY=.*|APP_KEY=${{ secrets.APP_KEY }}|" .env

      - name: Fix storage/cache permissions
        run: |
          chown -R 0:${{ env.WWWGROUP }} storage bootstrap/cache
          chmod -R 775 storage bootstrap/cache

      - name: Stop old containers
        run: docker compose down --remove-orphans || true

      - name: Deploy containers
        run: docker compose -f docker-compose.yml up -d --pull always --remove-orphans

      - name: Enable maintenance mode
        run: docker compose exec -T laravel.test php artisan down

      - name: Run database backup (Spatie)
        env:
          BACKUP_PASSWORD: ${{ secrets.BACKUP_PASSWORD }}
        run: |
          docker compose exec -e BACKUP_PASSWORD=${{ secrets.BACKUP_PASSWORD }} -T laravel.test \
            php artisan backup:run --only-db --disable-notifications

      - name: Locate latest backup file
        id: find_backup
        run: |
          LATEST=$(docker compose exec -T laravel.test sh -c 'ls -t storage/app/Laravel/Backups/*.zip | head -n 1')
          echo "latest=$LATEST" >> $GITHUB_OUTPUT

      - name: Copy backup out of container
        run: |
          mkdir -p /tmp/laravel_backup
          docker compose cp laravel.test:${{ steps.find_backup.outputs.latest }} /tmp/laravel_backup/backup.zip

      - name: Wipe database (empty all tables)
        run: docker compose exec -T laravel.test php artisan db:wipe --force

      - name: Run migrations
        run: docker compose exec -T laravel.test php artisan migrate --force

      - name: Restore database from backup
        env:
          BACKUP_PASSWORD: ${{ secrets.BACKUP_PASSWORD }}
        run: |
          docker compose cp /tmp/laravel_backup/backup.zip laravel.test:/tmp/backup.zip
          docker compose exec -e BACKUP_PASSWORD=${{ secrets.BACKUP_PASSWORD }} -T laravel.test \
            php artisan backup:restore /tmp/backup.zip --password="${BACKUP_PASSWORD}"

      - name: Build frontend assets
        run: docker compose exec -T laravel.test npm run build

      - name: Disable maintenance mode
        run: docker compose exec -T laravel.test php artisan up

      - name: Cleanup old Docker resources
        if: always()
        run: docker system prune -a -f --volumes